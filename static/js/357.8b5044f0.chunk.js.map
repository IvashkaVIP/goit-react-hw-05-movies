{"version":3,"file":"static/js/357.8b5044f0.chunk.js","mappings":"+SAEaA,EAAU,mCACjBC,EAAW,gCACXC,EAAqB,gBACrBC,EAAmB,eAElB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACQC,EAAAA,EAAAA,GAAM,GAAD,OAAIJ,GAAJ,OAAeC,EAAf,uBAAgDF,IAD7D,0GAIA,SAAeM,EAAtB,kC,aAAO,O,oBAAA,WAAgCC,GAAhC,kFACUF,EAAAA,EAAAA,GAAM,GAAD,OACbJ,GADa,OACFE,EADE,oBAC0BH,EAD1B,kBAC2CO,IAF1D,0GAOA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,kFACQJ,EAAAA,EAAAA,GAAM,GAAD,OACbJ,EADa,iBACIQ,EADJ,oBACkBT,IAF/B,0GAOA,SAAeU,EAAtB,kC,aAAO,O,oBAAA,WAA6BD,GAA7B,kFACQJ,EAAAA,EAAAA,GAAM,GAAD,OAAIJ,EAAJ,iBAAqBQ,EAArB,4BAA2CT,IADxD,0GAKA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,kFACQJ,EAAAA,EAAAA,GAAM,GAAD,OAAIJ,EAAJ,iBAAqBQ,EAArB,4BAA2CT,IADxD,0G,yGCMP,UAhCgB,WACd,OAA8BY,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IACE,IAAMC,EAAU,mCAAG,qGACEP,EAAAA,EAAAA,IAAiBI,GADnB,OACXI,EADW,OAGjBL,EAAWK,EAAKC,KAAKC,SAHJ,2CAAH,qDAKhBH,GAGD,CAFC,MAAOI,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACP,KAGF,4BACIF,EAAQY,SAAU,qEACpB,wBACGZ,EAAQa,KAAI,SAAAC,GAAG,OACd,2BACE,qCAAaA,EAAIC,WACjB,uBAAID,EAAIE,YAFDF,EAAIC,OADC,QASvB,C","sources":["apiService/Api.js","components/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nexport const API_KEY = '9d709850c7590845ffb60644b29d6f51';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_END_POINT = 'trending/all/';\nconst SEARCH_END_POINT = 'search/movie';\n\nexport async function getMoviesTrending() {\n  return await axios(`${BASE_URL}${TRENDING_END_POINT}day?api_key=${API_KEY}`);\n}\n\nexport async function getMoviesByQuery(query) {\n    return await axios(\n      `${BASE_URL}${SEARCH_END_POINT}?api_key=${API_KEY}&query=${query}`\n    );\n}\n\n// https://api.themoviedb.org/3/movie/{movie_id}\nexport async function getMoviesDetails (id) {\n  return await axios(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n  );\n}\n\n//https://api.themoviedb.org/3/movie/{movie_id}/credits\nexport async function getMoviesCast(id) {\n  return await axios(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n}\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews\nexport async function getMoviesReviews(id) {\n  return await axios(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n}","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMoviesReviews } from 'apiService/Api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  // console.log('MovieDetails >>> Reviews >>> ', movieId);\n  useEffect(() => {\n    try {\n      const getReviews = async () => {\n        const resp = await getMoviesReviews(movieId);\n        //  console.log(resp.data.results);\n        setReviews(resp.data.results);\n      };\n      getReviews();\n    } catch (er) {\n      console.log(er);\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      {!reviews.length && <p>We don't have any reviews for this movie</p>}\n      <ul>\n        {reviews.map(rev => (\n          <li key={rev.author}>\n            <h4>Author: {rev.author}</h4>\n            <p>{rev.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","BASE_URL","TRENDING_END_POINT","SEARCH_END_POINT","getMoviesTrending","axios","getMoviesByQuery","query","getMoviesDetails","id","getMoviesCast","getMoviesReviews","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","resp","data","results","er","console","log","length","map","rev","author","content"],"sourceRoot":""}